<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>平步青云win</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zxpgo.github.io/"/>
  <updated>2019-03-28T13:50:26.265Z</updated>
  <id>https://zxpgo.github.io/</id>
  
  <author>
    <name>zxp</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>公告</title>
    <link href="https://zxpgo.github.io/2100/03/27/%E5%85%AC%E5%91%8A/"/>
    <id>https://zxpgo.github.io/2100/03/27/公告/</id>
    <published>2100-03-27T12:18:14.000Z</published>
    <updated>2019-03-28T13:50:26.265Z</updated>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Shell编程-输入/输出重定向(七)</title>
    <link href="https://zxpgo.github.io/2019/03/28/Shell%E7%BC%96%E7%A8%8B-%E8%BE%93%E5%85%A5-%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91(%E4%B8%83)/"/>
    <id>https://zxpgo.github.io/2019/03/28/Shell编程-输入-输出重定向(七)/</id>
    <published>2019-03-28T07:18:14.000Z</published>
    <updated>2019-03-28T13:46:52.222Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;大多数 UNIX 系统命令从你的终端接受输入并将所产生的输出发送回​​到您的终端。一个命令通常从一个叫标准输入的地方读取输入，默认情况下，这恰好是你的终端。同样，一个命令通常将其输出写入到标准输出，默认情况下，这也是你的终端。
    
    </summary>
    
    
      <category term="Shell" scheme="https://zxpgo.github.io/tag/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程-文件包含(八)</title>
    <link href="https://zxpgo.github.io/2019/03/28/Shell%E7%BC%96%E7%A8%8B-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB(%E5%85%AB)/"/>
    <id>https://zxpgo.github.io/2019/03/28/Shell编程-文件包含(八)/</id>
    <published>2019-03-28T05:58:14.000Z</published>
    <updated>2019-03-28T13:45:39.338Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;和其他语言一样，Shell也可以包含外部脚本。这样可以很方便的封装一些公用的代码作为一个独立的文件。
    
    </summary>
    
    
      <category term="Shell" scheme="https://zxpgo.github.io/tag/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程-函数(六)</title>
    <link href="https://zxpgo.github.io/2019/03/28/Shell%E7%BC%96%E7%A8%8B-%E5%87%BD%E6%95%B0(%E5%85%AD)/"/>
    <id>https://zxpgo.github.io/2019/03/28/Shell编程-函数(六)/</id>
    <published>2019-03-28T04:18:14.000Z</published>
    <updated>2019-03-28T13:45:50.146Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Linux shell可以用户定义函数，然后再shell脚本中可以随意调用。
    
    </summary>
    
    
      <category term="Shell" scheme="https://zxpgo.github.io/tag/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程-test命令和流程控制(五)</title>
    <link href="https://zxpgo.github.io/2019/03/27/Shell%E7%BC%96%E7%A8%8B-test%E5%91%BD%E4%BB%A4%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6(%E4%BA%94)/"/>
    <id>https://zxpgo.github.io/2019/03/27/Shell编程-test命令和流程控制(五)/</id>
    <published>2019-03-27T12:18:14.000Z</published>
    <updated>2019-03-28T13:45:40.634Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Shell中的 test 命令用于检查某个条件是否成立，它可以进行数值、字符和文件三个方面的测试。
    
    </summary>
    
    
      <category term="Shell" scheme="https://zxpgo.github.io/tag/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程-输出命令echo和printf(四)</title>
    <link href="https://zxpgo.github.io/2019/03/27/Shell%E7%BC%96%E7%A8%8B-echo%E5%91%BD%E4%BB%A4(%E5%9B%9B)/"/>
    <id>https://zxpgo.github.io/2019/03/27/Shell编程-echo命令(四)/</id>
    <published>2019-03-27T12:18:14.000Z</published>
    <updated>2019-03-27T14:30:25.081Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Shell的echo指令与PHP的echo指令类似，都是用于字符串的输出，命令格式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo string
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;您可以使用echo实现复杂的输出格式控制。
    
    </summary>
    
    
      <category term="Shell" scheme="https://zxpgo.github.io/tag/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程-shell传递参数(三)</title>
    <link href="https://zxpgo.github.io/2019/03/27/Shell%E7%BC%96%E7%A8%8B-shell%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0(%E4%B8%89)/"/>
    <id>https://zxpgo.github.io/2019/03/27/Shell编程-shell传递参数(三)/</id>
    <published>2019-03-27T11:59:14.000Z</published>
    <updated>2019-03-27T14:31:00.319Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;我们可以在执行Shell脚本时，向脚本传递参数，脚本内获取参数的格式为： $n， n代表一个数字，1为执行脚本的第一个参数，2为执行脚本的第二个参数，以此类推…
    
    </summary>
    
    
      <category term="Shell" scheme="https://zxpgo.github.io/tag/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程-变量(二)</title>
    <link href="https://zxpgo.github.io/2019/03/27/Shell%E7%BC%96%E7%A8%8B-%E5%8F%98%E9%87%8F(%E4%BA%8C)/"/>
    <id>https://zxpgo.github.io/2019/03/27/Shell编程-变量(二)/</id>
    <published>2019-03-27T10:43:14.000Z</published>
    <updated>2019-03-27T14:16:42.307Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在Linux部分介绍了&lt;a href=&quot;https://www.zxpblog.cn/2018/08/16/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;变量的概念&lt;/a&gt;，以及初略的介绍了shell变量和环境变量，这里将深入讨论。&lt;br&gt;
    
    </summary>
    
    
      <category term="Shell" scheme="https://zxpgo.github.io/tag/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程-概述(一)</title>
    <link href="https://zxpgo.github.io/2019/03/27/Shell%E7%BC%96%E7%A8%8B-%E6%A6%82%E8%BF%B0(%E4%B8%80)/"/>
    <id>https://zxpgo.github.io/2019/03/27/Shell编程-概述(一)/</id>
    <published>2019-03-27T05:44:14.000Z</published>
    <updated>2019-03-27T14:16:47.635Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本系列教程来自：&lt;a href=&quot;http://www.runoob.com/linux/linux-shell.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;菜鸟教程&lt;/a&gt;和鸟哥的Linux私房菜基础学习篇。&lt;/p&gt;
&lt;p&gt;Shell是一个用C语言编写的程序，它是用户使用Linux的桥梁。Shell既是一种命令语言，又是一种程序设计语言。&lt;/p&gt;
&lt;p&gt;Shell是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Shell" scheme="https://zxpgo.github.io/tag/Shell/"/>
    
  </entry>
  
  <entry>
    <title>C++ Primer Plus--探讨C++新标准（十八）</title>
    <link href="https://zxpgo.github.io/2019/03/15/C++%20Primer%20Plus--%E6%8E%A2%E8%AE%A8C++%E6%96%B0%E6%A0%87%E5%87%86%EF%BC%88%E5%8D%81%E5%85%AB%EF%BC%89/"/>
    <id>https://zxpgo.github.io/2019/03/15/C++ Primer Plus--探讨C++新标准（十八）/</id>
    <published>2019-03-15T05:44:14.000Z</published>
    <updated>2019-03-24T14:26:01.151Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;首先介绍前面提高过的C++11新功能，并详细介绍其他一些功能。最后，简要地探讨BOOST库。
    
    </summary>
    
      <category term="C++ Primer Plus学习笔记" scheme="https://zxpgo.github.io/categories/C-Primer-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="C++" scheme="https://zxpgo.github.io/tag/C/"/>
    
  </entry>
  
  <entry>
    <title>C++ Primer Plus--输入、输出和文件（十七）</title>
    <link href="https://zxpgo.github.io/2019/03/08/C++%20Primer%20Plus--%E8%BE%93%E5%85%A5%E3%80%81%E8%BE%93%E5%87%BA%E5%92%8C%E6%96%87%E4%BB%B6%EF%BC%88%E5%8D%81%E4%B8%83%EF%BC%89/"/>
    <id>https://zxpgo.github.io/2019/03/08/C++ Primer Plus--输入、输出和文件（十七）/</id>
    <published>2019-03-08T05:44:14.000Z</published>
    <updated>2019-03-16T13:10:18.537Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;对C++输入和输出（简称I/O）的讨论提出了一个问题。一方面，几乎每个程序都要使用输入和输出，因此了解如何使用它们是每个学习计算机语言的人面临的首要任务；另一个方面，C++使用了很多较为高级的语言特性来实现输入和输出，其中包括：类、派生类、函数重载、模板和多重继承。
    
    </summary>
    
      <category term="C++ Primer Plus学习笔记" scheme="https://zxpgo.github.io/categories/C-Primer-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="C++" scheme="https://zxpgo.github.io/tag/C/"/>
    
  </entry>
  
  <entry>
    <title>牛客网C/C++错题集</title>
    <link href="https://zxpgo.github.io/2019/03/05/%E7%89%9B%E5%AE%A2%E7%BD%91C++%E9%94%99%E9%A2%98%E9%9B%86/"/>
    <id>https://zxpgo.github.io/2019/03/05/牛客网C++错题集/</id>
    <published>2019-03-05T05:44:14.000Z</published>
    <updated>2019-03-24T14:26:05.392Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;牛客网C/C++每天练习十题，记录重要知识点和错题。
    
    </summary>
    
    
      <category term="C++" scheme="https://zxpgo.github.io/tag/C/"/>
    
  </entry>
  
  <entry>
    <title>MySQL实战</title>
    <link href="https://zxpgo.github.io/2019/03/04/MySQL%E5%AE%9E%E6%88%98/"/>
    <id>https://zxpgo.github.io/2019/03/04/MySQL实战/</id>
    <published>2019-03-04T05:44:14.000Z</published>
    <updated>2019-03-04T07:55:19.433Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;MySQL实战：行程和用户、工资排名前N、分数排名。
    
    </summary>
    
      <category term="SQL" scheme="https://zxpgo.github.io/categories/SQL/"/>
    
    
      <category term="SQL" scheme="https://zxpgo.github.io/tag/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Excel文件导入导出和实战</title>
    <link href="https://zxpgo.github.io/2019/03/03/Excel%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA%E5%92%8C%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    <id>https://zxpgo.github.io/2019/03/03/Excel文件导入导出和练习题/</id>
    <published>2019-03-03T05:44:14.000Z</published>
    <updated>2019-03-04T07:54:06.758Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Excel文件导入到Mysql，以及Mysql导出到本地文件中。最后附加三个练习题！
    
    </summary>
    
      <category term="SQL" scheme="https://zxpgo.github.io/categories/SQL/"/>
    
    
      <category term="SQL" scheme="https://zxpgo.github.io/tag/SQL/"/>
    
  </entry>
  
  <entry>
    <title>表联结</title>
    <link href="https://zxpgo.github.io/2019/03/01/%E8%A1%A8%E8%81%94%E7%BB%93/"/>
    <id>https://zxpgo.github.io/2019/03/01/表联结/</id>
    <published>2019-03-01T14:09:50.000Z</published>
    <updated>2019-03-02T14:41:21.474Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这节介绍如何使用 MySQL 的 JOIN 在两个或多个表中查询数据。可以在 SELECT, UPDATE 和 DELETE 语句中使用 Mysql 的 JOIN 来联合多表查询。
    
    </summary>
    
      <category term="SQL" scheme="https://zxpgo.github.io/categories/SQL/"/>
    
    
      <category term="SQL" scheme="https://zxpgo.github.io/tag/SQL/"/>
    
  </entry>
  
  <entry>
    <title>廖雪峰SQL教程--表操作(四)</title>
    <link href="https://zxpgo.github.io/2019/02/28/%E5%BB%96%E9%9B%AA%E5%B3%B0SQL%E6%95%99%E7%A8%8B--%E8%A1%A8%E6%93%8D%E4%BD%9C(%E5%9B%9B)/"/>
    <id>https://zxpgo.github.io/2019/02/28/廖雪峰SQL教程--表操作(四)/</id>
    <published>2019-02-28T14:09:50.000Z</published>
    <updated>2019-03-02T14:49:48.670Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;关系数据库的基本操作就是增删改查，即CRUD：Create、Retrieve、Update、Delete。其中，对于查询，前面已经详细讲述了SELECT语句的详细用法。
    
    </summary>
    
      <category term="SQL" scheme="https://zxpgo.github.io/categories/SQL/"/>
    
    
      <category term="SQL" scheme="https://zxpgo.github.io/tag/SQL/"/>
    
  </entry>
  
  <entry>
    <title>廖雪峰SQL教程--查询数据(三)</title>
    <link href="https://zxpgo.github.io/2019/02/26/%E5%BB%96%E9%9B%AA%E5%B3%B0SQL%E6%95%99%E7%A8%8B--%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE(%E4%B8%89)/"/>
    <id>https://zxpgo.github.io/2019/02/26/廖雪峰SQL教程--查询数据(三)/</id>
    <published>2019-02-26T13:54:50.000Z</published>
    <updated>2019-03-01T13:18:29.300Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在关系数据库中，最常用的操作就是查询！结合DateWhale-MySQL集训进行学习，文末有DateWhale-MySQL集训给出的练习项目。
    
    </summary>
    
      <category term="SQL" scheme="https://zxpgo.github.io/categories/SQL/"/>
    
    
      <category term="SQL" scheme="https://zxpgo.github.io/tag/SQL/"/>
    
  </entry>
  
  <entry>
    <title>C++ Primer Plus--string类和标准模板库（十六）</title>
    <link href="https://zxpgo.github.io/2019/02/24/C++%20Primer%20Plus--string%E7%B1%BB%E5%92%8C%E6%A0%87%E5%87%86%E6%A8%A1%E6%9D%BF%E5%BA%93%EF%BC%88%E5%8D%81%E5%85%AD%EF%BC%89/"/>
    <id>https://zxpgo.github.io/2019/02/24/C++ Primer Plus--string类和标准模板库（十六）/</id>
    <published>2019-02-24T05:44:14.000Z</published>
    <updated>2019-03-11T05:58:32.745Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前面学习了C++的代码重用，这样做一个很大的回报是可以重用别人编写的代码，这正是类库的用武之地。有很多商业C++类库，也有一些库是C++程序包自带的。本章介绍一些其他可重用代码，它们将给编程工作带来快乐！本章将更深入讨论string类；然后介绍“智能指针”模板类，它们让管理动态内存更容易；接下来介绍标准模板库（STL）,它是一组用于处理各种容器对象的模板。
    
    </summary>
    
      <category term="C++ Primer Plus学习笔记" scheme="https://zxpgo.github.io/categories/C-Primer-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="C++" scheme="https://zxpgo.github.io/tag/C/"/>
    
  </entry>
  
  <entry>
    <title>C++ Primer Plus--友元、异常和其他（十五）</title>
    <link href="https://zxpgo.github.io/2019/02/24/C++%20Primer%20Plus--%E5%8F%8B%E5%85%83%E3%80%81%E5%BC%82%E5%B8%B8%E5%92%8C%E5%85%B6%E4%BB%96%EF%BC%88%E5%8D%81%E4%BA%94)/"/>
    <id>https://zxpgo.github.io/2019/02/24/C++ Primer Plus--友元、异常和其他（十五)/</id>
    <published>2019-02-24T05:44:14.000Z</published>
    <updated>2019-03-01T13:22:19.142Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;首先介绍一些C++语言最初的特性，然后介绍C++语言新增的一些特定。前者包括友元类、友元成员函数和嵌套类，它们是在其他类种声明的类；后者包括异常、运行阶段类型识别(RTTI)和改进后的类型转换控制。
    
    </summary>
    
      <category term="C++ Primer Plus学习笔记" scheme="https://zxpgo.github.io/categories/C-Primer-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="C++" scheme="https://zxpgo.github.io/tag/C/"/>
    
  </entry>
  
  <entry>
    <title>C++ Primer Plus--C++中的代码重用（十四）</title>
    <link href="https://zxpgo.github.io/2019/02/21/C++%20Primer%20Plus--C++%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%A0%81%E9%87%8D%E7%94%A8%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
    <id>https://zxpgo.github.io/2019/02/21/C++ Primer Plus--C++中的代码重用（十四）/</id>
    <published>2019-02-21T02:58:14.000Z</published>
    <updated>2019-02-23T14:35:53.569Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;C++的一个主要目的是促进代码重用。公有继承是实现这种目标的机制之一，但并不是唯一的机制。本章将介绍其他方法，其一就是本身是另一个类的对象，称为包含、组合或层次化。另一种方法是使用私有或保护继承。最后，还包括类模板。
    
    </summary>
    
      <category term="C++ Primer Plus学习笔记" scheme="https://zxpgo.github.io/categories/C-Primer-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="C++" scheme="https://zxpgo.github.io/tag/C/"/>
    
  </entry>
  
</feed>
