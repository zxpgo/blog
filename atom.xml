<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>平步青云win</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zxpgo.github.io/"/>
  <updated>2018-09-20T11:52:39.697Z</updated>
  <id>https://zxpgo.github.io/</id>
  
  <author>
    <name>zxp</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>模式识别(二)--K均值聚类</title>
    <link href="https://zxpgo.github.io/2019/09/11/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/"/>
    <id>https://zxpgo.github.io/2019/09/11/聚类分析/</id>
    <published>2019-09-11T14:28:50.000Z</published>
    <updated>2018-09-20T11:52:39.697Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;K均值聚类算法的思想是：首先随机选取K个对象作为初始的聚类中心，然后，计算每个对象距聚类中心的距离，把每个对象归到距离它最近的聚类中心。如果全部对象被分配完，则每个聚类的聚类中心将根据现有的对象重新计算。直到满足某个终止条件。K均值聚类算法是一种无监督学习算法。
    
    </summary>
    
      <category term="模式识别" scheme="https://zxpgo.github.io/categories/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB/"/>
    
    
      <category term="模式识别" scheme="https://zxpgo.github.io/tag/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>模式识别绪论(一)</title>
    <link href="https://zxpgo.github.io/2019/09/11/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB%E7%BB%AA%E8%AE%BA/"/>
    <id>https://zxpgo.github.io/2019/09/11/模式识别绪论/</id>
    <published>2019-09-11T14:28:50.000Z</published>
    <updated>2018-09-20T11:48:59.255Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;模式识别
    
    </summary>
    
      <category term="模式识别" scheme="https://zxpgo.github.io/categories/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB/"/>
    
    
      <category term="模式识别" scheme="https://zxpgo.github.io/tag/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>移动通信技术</title>
    <link href="https://zxpgo.github.io/2019/09/06/%E7%A7%BB%E5%8A%A8%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/"/>
    <id>https://zxpgo.github.io/2019/09/06/移动通信技术/</id>
    <published>2019-09-06T08:28:50.000Z</published>
    <updated>2018-09-07T13:03:20.334Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;介绍第二代至第四代移动通信技术，以及正在研发的第五代移动通信技术
    
    </summary>
    
      <category term="教程" scheme="https://zxpgo.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="通信协议" scheme="https://zxpgo.github.io/tag/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>DAC-MACS Effective Data Access Control for Multiauthority Cloud Storage Systems</title>
    <link href="https://zxpgo.github.io/2019/09/06/DAC-MACS-Effective%20Data%20Access%20Control%20for%20Multiauthority%20Cloud%20Storage%20Systems/"/>
    <id>https://zxpgo.github.io/2019/09/06/DAC-MACS-Effective Data Access Control for Multiauthority Cloud Storage Systems/</id>
    <published>2019-09-06T08:28:50.000Z</published>
    <updated>2018-10-02T02:45:52.770Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;论文一
    
    </summary>
    
      <category term="论文" scheme="https://zxpgo.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
      <category term="论文" scheme="https://zxpgo.github.io/tag/%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>Python实现：8种排序算法</title>
    <link href="https://zxpgo.github.io/2019/08/22/Python%E5%AE%9E%E7%8E%B08%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>https://zxpgo.github.io/2019/08/22/Python实现8种排序算法/</id>
    <published>2019-08-22T14:28:50.000Z</published>
    <updated>2018-09-27T06:41:50.378Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;介绍8中排序算法，包括算法的基本思路和算法的python实现。
    
    </summary>
    
      <category term="算法" scheme="https://zxpgo.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://zxpgo.github.io/tag/Python/"/>
    
      <category term="算法" scheme="https://zxpgo.github.io/tag/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>模式匹配的KMP算法</title>
    <link href="https://zxpgo.github.io/2019/08/22/%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D%E7%9A%84KMP%E7%AE%97%E6%B3%95/"/>
    <id>https://zxpgo.github.io/2019/08/22/模式匹配的KMP算法/</id>
    <published>2019-08-22T14:28:50.000Z</published>
    <updated>2018-09-05T10:23:19.353Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;简单模式匹配算法的效率不高，原因在于匹配过程中的回溯。KMP匹配算法的时间复杂度是O(m+n)，优于简单算法，原因在于KMP算法到达失配点，串S不需要回溯，串P也不一定要回溯到第1个字符的位置。
    
    </summary>
    
      <category term="算法" scheme="https://zxpgo.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://zxpgo.github.io/tag/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Python2.7和Python3.6安装以及文件解决</title>
    <link href="https://zxpgo.github.io/2019/08/22/python2.7%E5%92%8Cpython3.6%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>https://zxpgo.github.io/2019/08/22/python2.7和python3.6安装以及问题解决/</id>
    <published>2019-08-22T14:28:50.000Z</published>
    <updated>2018-08-26T14:43:47.693Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在实际中，可以需要同时安装python2.7和python3.6版本，在此过程中可以遇到一些问题，在此将一一陈述。
    
    </summary>
    
    
      <category term="Python" scheme="https://zxpgo.github.io/tag/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python2.x和Python3.x的版本区别</title>
    <link href="https://zxpgo.github.io/2019/08/22/python2.x%E5%92%8Cpython3.x%E7%89%88%E6%9C%AC%E5%8C%BA%E5%88%AB/"/>
    <id>https://zxpgo.github.io/2019/08/22/python2.x和python3.x版本区别/</id>
    <published>2019-08-22T14:28:50.000Z</published>
    <updated>2018-08-26T14:44:55.229Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Python 3.0在设计的时候没有考虑向下相容。许多针对早期Python版本设计的程式都无法在Python 3.0上正常执行。
    
    </summary>
    
    
      <category term="Python" scheme="https://zxpgo.github.io/tag/Python/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode算法题目</title>
    <link href="https://zxpgo.github.io/2019/08/22/LeetCode%E7%AE%97%E6%B3%95%E9%A2%98%E7%9B%AE/"/>
    <id>https://zxpgo.github.io/2019/08/22/LeetCode算法题目/</id>
    <published>2019-08-22T14:28:50.000Z</published>
    <updated>2018-10-01T13:59:30.900Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;leetcode是个&lt;a href=&quot;https://leetcode-cn.com/problemset/all/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题库&lt;/a&gt;，里面有很编程多面试的题目，可以在线编译运行。难度比较高。如果自己能都做出来，对面大公司很有帮助。
    
    </summary>
    
      <category term="算法" scheme="https://zxpgo.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://zxpgo.github.io/tag/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode面试题" scheme="https://zxpgo.github.io/tag/LeetCode%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>进制介绍以及相互转换</title>
    <link href="https://zxpgo.github.io/2019/08/22/%E8%BF%9B%E5%88%B6%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/"/>
    <id>https://zxpgo.github.io/2019/08/22/进制相互转换/</id>
    <published>2019-08-22T14:28:50.000Z</published>
    <updated>2018-08-26T14:11:01.367Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;进制也就是进位计数制，是人为定义的带进位的计数方法 对于任何一种进制—X进制，就表示每一位置上的数运算时都是逢X进一位。 十进制是逢十进一，十六进制是逢十六进一，二进制就是逢二进一，以此类推，x进制就是逢x进位。
    
    </summary>
    
    
      <category term="数据结构" scheme="https://zxpgo.github.io/tag/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>NP问题理解</title>
    <link href="https://zxpgo.github.io/2018/10/02/NP%E9%97%AE%E9%A2%98%E7%90%86%E8%A7%A3/"/>
    <id>https://zxpgo.github.io/2018/10/02/NP问题理解/</id>
    <published>2018-10-02T08:53:50.000Z</published>
    <updated>2018-10-02T10:03:39.188Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;P问题、NP问题、NP难问题、NP完全问题
    
    </summary>
    
    
      <category term="NP问题" scheme="https://zxpgo.github.io/tag/NP%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>格理论与密码学--数学基础（一）</title>
    <link href="https://zxpgo.github.io/2018/10/02/%E6%A0%BC%E7%90%86%E8%AE%BA%E4%B8%8E%E5%AF%86%E7%A0%81%E5%AD%A6--%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://zxpgo.github.io/2018/10/02/格理论与密码学--数学基础（一）/</id>
    <published>2018-10-02T06:52:50.000Z</published>
    <updated>2018-10-02T10:03:48.536Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;介绍一些基本的数学概念和符号。
    
    </summary>
    
      <category term="格理论与密码学" scheme="https://zxpgo.github.io/categories/%E6%A0%BC%E7%90%86%E8%AE%BA%E4%B8%8E%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="格理论与密码学" scheme="https://zxpgo.github.io/tag/%E6%A0%BC%E7%90%86%E8%AE%BA%E4%B8%8E%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>C++ Primer Plus--分支语句和逻辑运算符（六）</title>
    <link href="https://zxpgo.github.io/2018/10/02/C++%20Primer%20Plus--%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5%E5%92%8C%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6%EF%BC%88%E5%85%AD%EF%BC%89/"/>
    <id>https://zxpgo.github.io/2018/10/02/C++ Primer Plus--分支语句和逻辑运算符（六）/</id>
    <published>2018-10-02T01:48:14.000Z</published>
    <updated>2018-10-02T12:32:40.944Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;C++提供了if和switch语句来进行决策，还有逻辑运算符和条件运算符。
    
    </summary>
    
      <category term="C++ Primer Plus学习笔记" scheme="https://zxpgo.github.io/categories/C-Primer-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="C++" scheme="https://zxpgo.github.io/tag/C/"/>
    
  </entry>
  
  <entry>
    <title>格-数据基础</title>
    <link href="https://zxpgo.github.io/2018/10/01/%E6%A0%BC-%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/"/>
    <id>https://zxpgo.github.io/2018/10/01/格-数据基础/</id>
    <published>2018-10-01T08:42:50.000Z</published>
    <updated>2018-10-02T03:10:19.844Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;格密码是一类备受关注的抗量子计算攻击的公钥密码体制。格密码理论的研究设计的密码数学问题很多。
    
    </summary>
    
      <category term="云数据完整性验证" scheme="https://zxpgo.github.io/categories/%E4%BA%91%E6%95%B0%E6%8D%AE%E5%AE%8C%E6%95%B4%E6%80%A7%E9%AA%8C%E8%AF%81/"/>
    
    
      <category term="云数据完整性验证" scheme="https://zxpgo.github.io/tag/%E4%BA%91%E6%95%B0%E6%8D%AE%E5%AE%8C%E6%95%B4%E6%80%A7%E9%AA%8C%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络(三)--数据链路层</title>
    <link href="https://zxpgo.github.io/2018/10/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C(%E4%BA%8C)--%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/"/>
    <id>https://zxpgo.github.io/2018/10/01/计算机网络(二)--数据链路层/</id>
    <published>2018-10-01T02:48:50.000Z</published>
    <updated>2018-10-01T10:18:58.452Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;数据链路层属于计算机网络的底层，数据链路层使用的信道主要有以下两种类型：(1)点对点信道；(2)广播信道。
    
    </summary>
    
      <category term="计算机网络" scheme="https://zxpgo.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="计算机网络" scheme="https://zxpgo.github.io/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Python字典、列表、元组、数组</title>
    <link href="https://zxpgo.github.io/2018/09/27/Python%E5%AD%97%E5%85%B8%E3%80%81%E5%88%97%E8%A1%A8%E3%80%81%E5%85%83%E7%BB%84%E3%80%81%E6%95%B0%E7%BB%84/"/>
    <id>https://zxpgo.github.io/2018/09/27/Python字典、列表、元组、数组/</id>
    <published>2018-09-27T12:51:50.000Z</published>
    <updated>2018-09-27T14:12:44.312Z</updated>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="Python" scheme="https://zxpgo.github.io/tag/Python/"/>
    
  </entry>
  
  <entry>
    <title>C++ Primer Plus--循环和关系表达式（五）</title>
    <link href="https://zxpgo.github.io/2018/09/27/C++%20Primer%20Plus--%E5%BE%AA%E7%8E%AF%E5%92%8C%E5%85%B3%E7%B3%BB%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <id>https://zxpgo.github.io/2018/09/27/C++ Primer Plus--循环和关系表达式（五）/</id>
    <published>2018-09-27T02:23:14.000Z</published>
    <updated>2018-10-02T02:20:22.647Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;C++提供三种循环：for循环、while循环和do while循环。
    
    </summary>
    
      <category term="C++ Primer Plus学习笔记" scheme="https://zxpgo.github.io/categories/C-Primer-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="C++" scheme="https://zxpgo.github.io/tag/C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络(二)--物理层</title>
    <link href="https://zxpgo.github.io/2018/09/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C(%E4%BA%8C)--%E7%89%A9%E7%90%86%E5%B1%82/"/>
    <id>https://zxpgo.github.io/2018/09/21/计算机网络(二)--物理层/</id>
    <published>2018-09-21T14:28:50.000Z</published>
    <updated>2018-09-29T14:45:09.648Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;物理层
    
    </summary>
    
      <category term="计算机网络" scheme="https://zxpgo.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="计算机网络" scheme="https://zxpgo.github.io/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络(一)--概论</title>
    <link href="https://zxpgo.github.io/2018/09/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C(%E4%B8%80)--%E6%A6%82%E8%AE%BA/"/>
    <id>https://zxpgo.github.io/2018/09/21/计算机网络(一)--概论/</id>
    <published>2018-09-21T14:28:50.000Z</published>
    <updated>2018-09-26T08:37:02.867Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;五层协议体系结构、计算机网络性能
    
    </summary>
    
      <category term="计算机网络" scheme="https://zxpgo.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="计算机网络" scheme="https://zxpgo.github.io/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>C++ Primer Plus--复合类型（四）</title>
    <link href="https://zxpgo.github.io/2018/09/12/C++%20Primer%20Plus--%E5%A4%8D%E5%90%88%E7%B1%BB%E5%9E%8B%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>https://zxpgo.github.io/2018/09/12/C++ Primer Plus--复合类型（四）/</id>
    <published>2018-09-12T06:23:14.000Z</published>
    <updated>2018-09-26T08:24:57.329Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;复合类型介绍
    
    </summary>
    
      <category term="C++ Primer Plus学习笔记" scheme="https://zxpgo.github.io/categories/C-Primer-Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="C++" scheme="https://zxpgo.github.io/tag/C/"/>
    
  </entry>
  
</feed>
