<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>平步青云win</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zxpgo.github.io/"/>
  <updated>2019-08-13T14:21:50.823Z</updated>
  <id>https://zxpgo.github.io/</id>
  
  <author>
    <name>zxp</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>公告</title>
    <link href="https://zxpgo.github.io/2100/03/27/%E5%85%AC%E5%91%8A/"/>
    <id>https://zxpgo.github.io/2100/03/27/公告/</id>
    <published>2100-03-27T12:18:14.000Z</published>
    <updated>2019-08-13T14:21:50.823Z</updated>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://zxpgo.github.io/2019/09/01/%E4%BD%BF%E7%94%A8kubeadm%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E4%B8%80%E4%B8%AAK8S%E9%9B%86%E7%BE%A4%E6%95%99%E7%A8%8B/"/>
    <id>https://zxpgo.github.io/2019/09/01/使用kubeadm快速部署一个K8S集群教程/</id>
    <published>2019-09-01T12:49:29.197Z</published>
    <updated>2019-09-01T12:48:35.540Z</updated>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>堆和栈分析</title>
    <link href="https://zxpgo.github.io/2019/09/01/%E5%A0%86%E5%92%8C%E6%A0%88%E5%88%86%E6%9E%90/"/>
    <id>https://zxpgo.github.io/2019/09/01/堆和栈分析/</id>
    <published>2019-09-01T03:44:14.000Z</published>
    <updated>2019-09-01T12:50:53.960Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;掌握内存模型分析方法——画运行时内存图&lt;/li&gt;
&lt;li&gt;掌握堆、栈概念&lt;/li&gt;
&lt;li&gt;掌握指针、引用、对象&lt;/li&gt;
&lt;li&gt;探微知著：魔鬼尽在细节中&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="c++" scheme="https://zxpgo.github.io/tag/c/"/>
    
  </entry>
  
  <entry>
    <title>剑指offer-面试需要的基础知识</title>
    <link href="https://zxpgo.github.io/2019/08/22/%E5%89%91%E6%8C%87offer%E4%B9%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>https://zxpgo.github.io/2019/08/22/剑指offer之基础知识/</id>
    <published>2019-08-22T05:28:50.000Z</published>
    <updated>2019-09-01T12:48:31.260Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;剑指offer第二章的题目练习和重要知识点。
    
    </summary>
    
    
      <category term="面试题目" scheme="https://zxpgo.github.io/tag/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>内存管理(C++)</title>
    <link href="https://zxpgo.github.io/2019/08/06/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86(C++)/"/>
    <id>https://zxpgo.github.io/2019/08/06/内存管理(C++)/</id>
    <published>2019-08-06T03:44:14.000Z</published>
    <updated>2019-09-01T12:48:29.212Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;C++内存管理，万丈高楼平地起，源码之前，了无秘密！
    
    </summary>
    
    
      <category term="c++" scheme="https://zxpgo.github.io/tag/c/"/>
    
  </entry>
  
  <entry>
    <title>C++对象模型</title>
    <link href="https://zxpgo.github.io/2019/08/06/C++%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/"/>
    <id>https://zxpgo.github.io/2019/08/06/C++对象模型/</id>
    <published>2019-08-06T03:44:14.000Z</published>
    <updated>2019-09-01T12:48:27.494Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;泛型编程，深入探索面向对象之继承关系所形成的对象模型，包含this指针，虚指针，虚表，虚极至以及虚函数造成的多样效果
    
    </summary>
    
    
      <category term="c++" scheme="https://zxpgo.github.io/tag/c/"/>
    
  </entry>
  
  <entry>
    <title>C++面向对象高级编程</title>
    <link href="https://zxpgo.github.io/2019/08/06/C++%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B/"/>
    <id>https://zxpgo.github.io/2019/08/06/C++面向对象高级编程/</id>
    <published>2019-08-06T03:44:14.000Z</published>
    <updated>2019-09-01T12:48:32.447Z</updated>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="c++" scheme="https://zxpgo.github.io/tag/c/"/>
    
  </entry>
  
  <entry>
    <title>k8s中jenkins的部署以及jenkins的配置和使用(C++)</title>
    <link href="https://zxpgo.github.io/2019/08/06/k8s%E4%B8%ADjenkins%E7%9A%84%E9%83%A8%E7%BD%B2/"/>
    <id>https://zxpgo.github.io/2019/08/06/k8s中jenkins的部署/</id>
    <published>2019-08-06T03:44:14.000Z</published>
    <updated>2019-08-29T12:42:24.538Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;转自： &lt;a href=&quot;https://www.kancloud.cn/huyipow/kubernetes/716441&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.kancloud.cn/huyipow/kubernetes/716441&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文将讨论和探索两个令人惊奇和相当有趣的技术。一个是Jenkins，一个流行的持续集成/发布的工具，另一个是Kubernetes，一个流行的容器编排引擎。
    
    </summary>
    
    
      <category term="k8s" scheme="https://zxpgo.github.io/tag/k8s/"/>
    
  </entry>
  
  <entry>
    <title>k8s基本概念</title>
    <link href="https://zxpgo.github.io/2019/08/04/k8s/"/>
    <id>https://zxpgo.github.io/2019/08/04/k8s/</id>
    <published>2019-08-04T14:28:50.000Z</published>
    <updated>2019-08-04T13:15:31.197Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;k8s基本对象&quot;&gt;&lt;a href=&quot;#k8s基本对象&quot; class=&quot;headerlink&quot; title=&quot;k8s基本对象&quot;&gt;&lt;/a&gt;k8s基本对象&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Pod: Pod是最小部署单元，一个Pod有一个或多个容器组成，Pod中容器共享存储和网络，在同一台Docker主机上运行。&lt;/li&gt;
&lt;li&gt;Service&lt;ul&gt;
&lt;li&gt;Service一个应用服务抽象，定义了一个Pod逻辑集合和访问这个Pod集合的策略。&lt;/li&gt;
&lt;li&gt;service代理Pod集合对外表现为一个访问入口，分配一个集群IP地址，来自这个IP的请求将负载均衡转发后端Pod中的容器。&lt;/li&gt;
&lt;li&gt;Service通过Lable Selector选择一个Pod提供服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Volume: 数据卷，共享Pod中容器使用的数据。&lt;/li&gt;
&lt;li&gt;Namespace: 一个命名空间可以看作一个虚拟的集群。将一个k8s分成不同的虚拟集群。在每个虚拟集群中部署一个项目。命名空间将对象逻辑上分配到不同Namespace，可以是不同的项目、用户等区分管理，并设定控制策略，从而实现多租户。命名空间也成为虚拟集群。&lt;/li&gt;
&lt;li&gt;Lable: 标签用于区分对象（比如Pod、Service），键/值对存在；每个对象可以有多个标签，通过标签关联对象。
    
    </summary>
    
    
      <category term="k8s" scheme="https://zxpgo.github.io/tag/k8s/"/>
    
  </entry>
  
  <entry>
    <title>C++2.0(11)新特性</title>
    <link href="https://zxpgo.github.io/2019/08/03/C++2.0%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>https://zxpgo.github.io/2019/08/03/C++2.0新特性/</id>
    <published>2019-08-03T14:28:50.000Z</published>
    <updated>2019-09-01T12:50:35.026Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;C++11中的一些新特性。
    
    </summary>
    
    
      <category term="c++" scheme="https://zxpgo.github.io/tag/c/"/>
    
  </entry>
  
  <entry>
    <title>C++版设计模式</title>
    <link href="https://zxpgo.github.io/2019/08/02/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>https://zxpgo.github.io/2019/08/02/设计模式/</id>
    <published>2019-08-02T14:28:50.000Z</published>
    <updated>2019-08-04T13:16:09.291Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;学习书籍： 《设计模式：可复用面向对象软件的基础》
    
    </summary>
    
    
      <category term="c++" scheme="https://zxpgo.github.io/tag/c/"/>
    
  </entry>
  
  <entry>
    <title>QT教程</title>
    <link href="https://zxpgo.github.io/2019/07/08/QT/"/>
    <id>https://zxpgo.github.io/2019/07/08/QT/</id>
    <published>2019-07-08T05:44:14.000Z</published>
    <updated>2019-08-03T12:58:55.794Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;QT概述&quot;&gt;&lt;a href=&quot;#QT概述&quot; class=&quot;headerlink&quot; title=&quot;QT概述&quot;&gt;&lt;/a&gt;QT概述&lt;/h2&gt;&lt;h3 id=&quot;什么是QT&quot;&gt;&lt;a href=&quot;#什么是QT&quot; class=&quot;headerlink&quot; title=&quot;什么是QT&quot;&gt;&lt;/a&gt;什么是QT&lt;/h3&gt;&lt;p&gt;QT是一个款平台的C++图形用户界面应用程序框架。它为应用程序开发者提供建立艺术级图形界面所需的所有功能。它是完全面向对象的，很容易扩展，并且允许真正的组件编程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="C++" scheme="https://zxpgo.github.io/tag/C/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode算法题目C++</title>
    <link href="https://zxpgo.github.io/2019/06/22/LeetCode%E7%AE%97%E6%B3%95%E9%A2%98%E7%9B%AEC++/"/>
    <id>https://zxpgo.github.io/2019/06/22/LeetCode算法题目C++/</id>
    <published>2019-06-22T14:28:50.000Z</published>
    <updated>2019-06-20T14:38:21.071Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;LeetCode刷起来！
    
    </summary>
    
    
      <category term="面试题目" scheme="https://zxpgo.github.io/tag/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>滑动窗口解决子串问题(LeetCode)</title>
    <link href="https://zxpgo.github.io/2019/06/22/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    <id>https://zxpgo.github.io/2019/06/22/滑动窗口/</id>
    <published>2019-06-22T14:28:50.000Z</published>
    <updated>2019-08-03T13:00:07.084Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文详解「滑动窗口」这种高级双指针技巧的算法框架，带你秒杀几道难度较大的子字符串匹配问题：&lt;/p&gt;
&lt;ol start=&quot;76&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/minimum-window-substring/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;最小覆盖子串&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;找到字符串中所有字母异位词&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;无重复字符的最长子串&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="面试题目" scheme="https://zxpgo.github.io/tag/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>C++11并发与多线程</title>
    <link href="https://zxpgo.github.io/2019/06/17/C++%E5%B9%B6%E5%8F%91%E4%B8%8E%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>https://zxpgo.github.io/2019/06/17/C++并发与多线程/</id>
    <published>2019-06-17T12:18:14.000Z</published>
    <updated>2019-06-20T14:30:43.413Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/av39171692?from=search&amp;amp;seid=7663928812674265445&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;C++多线程编程视频课程学习&lt;/a&gt;笔记，适用于具有C++11基础的学者，开发环境VS2017。
    
    </summary>
    
    
      <category term="C++" scheme="https://zxpgo.github.io/tag/C/"/>
    
  </entry>
  
  <entry>
    <title>HTTP和HTTPS</title>
    <link href="https://zxpgo.github.io/2019/06/15/HTTP%E5%92%8CHTTPS/"/>
    <id>https://zxpgo.github.io/2019/06/15/HTTP和HTTPS/</id>
    <published>2019-06-15T05:44:14.000Z</published>
    <updated>2019-06-20T14:36:33.143Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;HTTP和HTTPS的原理介绍，以及两者区别！
    
    </summary>
    
    
      <category term="计算机网络" scheme="https://zxpgo.github.io/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>面试常考问题</title>
    <link href="https://zxpgo.github.io/2019/06/14/%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%80%83%E9%A2%98/"/>
    <id>https://zxpgo.github.io/2019/06/14/面试常考题/</id>
    <published>2019-06-14T05:44:14.000Z</published>
    <updated>2019-06-20T14:39:49.073Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;总结最近几次面试中经常被问到的题目！
    
    </summary>
    
    
      <category term="面试" scheme="https://zxpgo.github.io/tag/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Linux内核分析</title>
    <link href="https://zxpgo.github.io/2019/06/11/Linux%E5%86%85%E6%A0%B8%E9%98%85%E8%AF%BB%E9%97%AE%E9%A2%98/"/>
    <id>https://zxpgo.github.io/2019/06/11/Linux内核阅读问题/</id>
    <published>2019-06-11T05:44:14.000Z</published>
    <updated>2019-06-20T14:39:10.453Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Linux内核介绍，以及内核中C语言的特点！
    
    </summary>
    
    
      <category term="Linux" scheme="https://zxpgo.github.io/tag/Linux/"/>
    
  </entry>
  
  <entry>
    <title>标准模板库STL</title>
    <link href="https://zxpgo.github.io/2019/05/20/STL%E5%AD%A6%E4%B9%A0/"/>
    <id>https://zxpgo.github.io/2019/05/20/STL学习/</id>
    <published>2019-05-20T14:28:50.000Z</published>
    <updated>2019-06-20T14:37:46.064Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;标准模板库介绍，包括六个部件的分析。所有内容学习自侯捷老师STL模板库介绍学习教程！
    
    </summary>
    
    
      <category term="C++" scheme="https://zxpgo.github.io/tag/C/"/>
    
  </entry>
  
  <entry>
    <title>最大公约数和最小公倍数求法</title>
    <link href="https://zxpgo.github.io/2019/05/05/%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E5%92%8C%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0%E6%B1%82%E6%B3%95/"/>
    <id>https://zxpgo.github.io/2019/05/05/最大公约数和最小公倍数求法/</id>
    <published>2019-05-05T05:44:14.000Z</published>
    <updated>2019-05-26T11:20:59.847Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最大公约数可以通过辗转相除法求出，而最小公倍数可以通过最大公约数求出。
    
    </summary>
    
    
      <category term="C++" scheme="https://zxpgo.github.io/tag/C/"/>
    
  </entry>
  
</feed>
